<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<http use-expressions="true" entry-point-ref="authenticationProcessingFilterEntryPoint">
		<custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER" />
		<custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" />
		<logout invalidate-session="true" logout-success-url="/"
			logout-url="/Ridding/logout.do" />
	</http>

	<beans:bean id="loginFilter"
		class="com.ridding.security.MyUsernamePasswordAuthenticationFilter">
		<!-- 处理登录的action -->
		<beans:property name="filterProcessesUrl" value="/login.do"></beans:property>
		<!-- 验证成功后的处理-->
		<beans:property name="authenticationSuccessHandler"
			ref="loginLogAuthenticationSuccessHandler"></beans:property>
		<!-- 验证失败后的处理-->
		<beans:property name="authenticationFailureHandler"
			ref="simpleUrlAuthenticationFailureHandler"></beans:property>
		<beans:property name="authenticationManager" ref="myAuthenticationManager"></beans:property>
	</beans:bean>

	<beans:bean id="myFilter"
		class="com.ridding.security.MyFilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="myAuthenticationManager" />
		<beans:property name="accessDecisionManager" ref="myAccessDecisionManagerBean" />
		<beans:property name="securityMetadataSource" ref="securityMetadataSource" />
	</beans:bean>
	<beans:bean id="loginLogAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/login.jsp"></beans:property>
	</beans:bean>
	<beans:bean id="simpleUrlAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<!--
			可以配置相应的跳转方式。属性forwardToDestination为true采用forward false为sendRedirect
		-->
		<beans:property name="defaultFailureUrl" value="/index.jsp"></beans:property>
	</beans:bean>


	<authentication-manager alias="myAuthenticationManager">
		<authentication-provider user-service-ref="myUserDetailService">
			<password-encoder hash="plaintext">
			</password-encoder>
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="myUserDetailService" class="com.ridding.security.MyUserDetailService" />
	<beans:bean id="myAccessDecisionManagerBean"
		class="com.ridding.security.MyAccessDecisionManager">
	</beans:bean>
	<beans:bean id="securityMetadataSource"
		class="com.ridding.security.MyInvocationSecurityMetadataSource">
		<beans:property name="preposingConfig" ref="preposingConfig"></beans:property>
	</beans:bean>
	<beans:bean id="preposingConfig" class="com.ridding.security.PreposingConfig">
		<beans:property name="noAuthURIConfig">
			<beans:list>
				<beans:value>/**/riddingPub.do*</beans:value>
				<beans:value>/**/backendPub.do*</beans:value>
				<beans:value>/**/riddingWebPub.do*</beans:value>
				<beans:value>/**/login.do*</beans:value>
				<beans:value>/**/logout.do*</beans:value>
				<beans:value>/**/dwr/call/plaincall/RiddingPubBean.riddingUserList.dwr*</beans:value>
				<!--  测试 -->
				<beans:value>/**/ridding.do*</beans:value>
				<beans:value>/**/backend.do*</beans:value>
				<beans:value>/**/riddingWeb.do*</beans:value>
				<beans:value>/**/upload.do*</beans:value>
				<beans:value>/**/riddingClub.do*</beans:value>
				<beans:value>/**/*.dwr</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="noAdminURIConfig">
			<beans:list>
			</beans:list>
		</beans:property>
	</beans:bean>
	<beans:bean id="authenticationProcessingFilterEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/"></beans:property>
	</beans:bean>
	<beans:bean id="httpSessionContextIntegrationFilter"
		class="org.springframework.security.web.context.HttpSessionContextIntegrationFilter">
		<beans:property name="allowSessionCreation" value="false" />
	</beans:bean>

</beans:beans>
