<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="       
	  http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd       
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd       
      http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd       
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd       
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<bean id="quartzFactory"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="sinaWeiBoTrigger" />
				<ref bean="sinaToGoogleUrlTrigger" />
				<ref bean="googleUrlToTapsTrigger" />
			</list>
		</property>
		<property name="startupDelay" value="0" />
		<property name="taskExecutor">
			<bean id="taskExecutor"
				class="org.springframework.scheduling.quartz.SimpleThreadPoolTaskExecutor">
				<property name="threadCount" value="100" />
			</bean>
		</property>
	</bean>
	<!-- 从新浪微博取数据 -->
	<bean id="sinaWeiBoDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="sinaWeiBoService" />
		</property>
		<property name="targetMethod">
			<value>getAtMeSinaWeiBoQuartz</value>
		</property>
		<property name="concurrent">
			<value>false</value>
		</property>
	</bean>
	<bean id="sinaWeiBoTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="sinaWeiBoDetail" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<!-- 将sina微博数据取出googleurl -->
	<bean id="sinaToGoogleUrlDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="sinaWeiBoService" />
		</property>
		<property name="targetMethod">
			<value>getIMapListFromWeiBoQuartz</value>
		</property>
		<property name="concurrent">
			<value>false</value>
		</property>
	</bean>
	<bean id="sinaToGoogleUrlTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="sinaToGoogleUrlDetail" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<!-- 将google url转为标点 -->
	<bean id="googleUrlToTapsDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="mapService" />
		</property>
		<property name="targetMethod">
			<value>getMapToLocationQuartz</value>
		</property>
		<property name="concurrent">
			<value>false</value>
		</property>
	</bean>
	<bean id="googleUrlToTapsTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="googleUrlToTapsDetail" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<!--
		<bean id="asyncTaskService"
		class="com.ridding.service.async.AsyncTaskServiceImpl"
		init-method="init" destroy-method="destroy"> <property
		name="delayTime"> <value>1000</value> </property> <property
		name="executors"> <list> <ref bean="riddingMapExecutor" /> </list>
		</property> <property name="threadPool"> <bean
		class="org.apache.tomcat.util.threads.ThreadPool"> <property
		name="maxThreads" value="10" /> </bean> </property> </bean>
	-->
	<!--
		<bean id="filterChainProxy"
		class="org.acegisecurity.util.FilterChainProxy"> <property
		name="filterInvocationDefinitionSource"> <value>
		CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON PATTERN_TYPE_APACHE_ANT
		/**=preposingFilter,exceptionTranslationFilter,accessTokenFilter</value>
		</property> </bean> <bean id="preposingConfig"
		class="com.ridding.security.PreposingConfig"> <property
		name="noAuthURIConfig"> <value>/**/riddingPub.do*</value> </property>
		</bean> <bean id="preposingFilter"
		class="com.ridding.security.PreposingFilter"> <property
		name="preposingConfig"> <ref bean="preposingConfig" /> </property>
		</bean> <bean id="accessTokenFilter"
		class="com.ridding.security.AccessTokenFilter"> <property
		name="accountMapper"> <ref bean="accountMapper" /> </property> </bean>


		<bean id="exceptionTranslationFilter"
		class="com.ridding.security.InterfaceExceptionTranslationFilter">
		<property name="defaultErrorUrl">
		<value>http://photo.163.com/photo/err?code=404</value> </property>
		<property name="exceptionMappings"> <props> <prop
		key="com.ridding.exception.TokenNotRightException"> 1001 </prop> <prop
		key="ocom.ridding.exception.NoUserIdException"> 1002 </prop> <prop
		key="com.ridding.exception.NoAccountException"> 1002 </prop> </props>
		</property> </bean>
	-->
</beans>