<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ridding.mapper.RiddingPictureMapper">

	<resultMap type="RiddingPicture" id="riddingPictureMap">
		<id property="id" column="id" />
		<result property="riddingId" column="riddingId" />
		<result property="photoUrl" column="photoUrl" />
		<result property="userId" column="userId" />
		<result property="createTime" column="createTime" />
		<result property="lastUpdateTime" column="lastUpdateTime" />
		<result property="status" column="status" />
		<result property="latitude" column="latitude" />
		<result property="longtitude" column="longtitude" />
		<result property="description" column="description" />
		<result property="takePicDate" column="takePicDate" />
		<result property="takePicLocation" column="takePicLocation" />
		<result property="width" column="width" />
		<result property="height" column="height" />
		<result property="likeCount" column="likeCount" />
		<result property="breadId" column="breadId" />
	</resultMap>

	<insert id="addRiddingPicture" parameterType="RiddingPicture">
		INSERT INTO TB_Ridding_Picture(
		riddingId,
		photoUrl,
		userId,
		createTime,
		lastUpdateTime,
		status,
		latitude,
		longtitude,
		description,
		takePicDate,
		takePicLocation,
		width,
		height,
		likeCount,
		breadId
		)VALUES(
		#{riddingId},
		#{photoUrl},
		#{userId},
		#{createTime},
		#{lastUpdateTime},
		#{status},
		#{latitude},
		#{longtitude},
		#{description},
		#{takePicDate},
		#{takePicLocation},
		#{width},
		#{height},
		#{likeCount},
		#{breadId}
		)
		<selectKey keyProperty="id" resultType="long">
			SELECT
			LAST_INSERT_ID() AS VALUE
		</selectKey>
	</insert>

	<select id="getRiddingPicturesByRiddingId" resultMap="riddingPictureMap"
		parameterType="hashMap">
		SELECT * from TB_Ridding_Picture where
		riddingId=#{riddingId} and
		createTime > #{createTime} order by
		createTime asc
		<if test="limit>0">
			limit #{limit}
		</if>
		;
	</select>

	<delete id="deleteRiddingPicByRiddingId" parameterType="long"
		flushCache="true" statementType="PREPARED">
		delete from TB_Ridding_Picture where
		riddingId=#{riddingId};
	</delete>

	<delete id="deleteRiddingPicture" parameterType="long"
		flushCache="true" statementType="PREPARED">
		delete from TB_Ridding_Picture where
		id=#{id};
	</delete>

	<update id="incLikePicCount" parameterType="long" flushCache="true"
		statementType="PREPARED">
		update TB_Ridding_Picture set likeCount = likeCount + 1
		where id
		= #{pictureId} ;
	</update>

	<select id="getPictureByBreadId" resultMap="riddingPictureMap">
		SELECT * from
		TB_Ridding_Picture where
		riddingId=#{riddingId} and
		breadId = #{breadId}
		;
		</select>
	<select id="getRiddingPicturesById" parameterType="long">
		select * from
		TB_Ridding_Picture
		where id=#{pictureId};
	</select>
</mapper>