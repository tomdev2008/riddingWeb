<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ridding.mapper.RiddingCommentMapper">

	<resultMap type="RiddingComment" id="riddingCommentMap">
		<id property="id" column="id" />
		<result property="riddingId" column="riddingId" />
		<result property="userId" column="userId" />
		<result property="toUserId" column="toUserId" />
		<result property="text" column="text" />
		<result property="usePicUrl" column="usePicUrl" />
		<result property="commentType" column="commentType" />
		<result property="replyId" column="replyId" />
		<result property="CreateTime" column="CreateTime" />
		<result property="lastUpdateTime" column="lastUpdateTime" />
	</resultMap>
	<insert id="addRiddingComment" parameterType="RiddingComment">
		INSERT INTO TB_Ridding_Comment(
		riddingId,
		userId,
		toUserId,
		text,
		usePicUrl,
		commentType,
		replyId,
		createTime,
		lastUpdateTime
		)VALUES(
		#{riddingId},
		#{userId},
		#{toUserId},
		#{text},
		#{usePicUrl},
		#{commentType},
		#{replyId},
		#{createTime},
		#{lastUpdateTime}
		)
		<selectKey keyProperty="id" resultType="long">
			SELECT
			LAST_INSERT_ID() AS VALUE
		</selectKey>
	</insert>

	<!-- 查询Ridding -->
	<select id="getRiddingCommentList" resultMap="riddingCommentMap">
		SELECT * from TB_Ridding_Comment where riddingId=#{riddingId}
		<if test="isLarger==1">
			and createTime > #{createTime} 
		</if>
		<if test="isLarger==0">
			and #{createTime} > createTime 
		</if>
		order by createTime desc limit #{limit};
	</select>

	<delete id="deleteRiddingCommentByRiddingId" parameterType="long"
		flushCache="true" statementType="PREPARED">
		delete from TB_Ridding_Comment where
		riddingId=#{riddingId};
	</delete>
</mapper>